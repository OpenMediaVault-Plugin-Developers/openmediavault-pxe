#!/bin/sh
#
# Copyright (C) 2014 OpenMediaVault Plugin Developers
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

SERVICE_XPATH=/config/services/pxe

PXE_SHARED_FOLDER_REF=$(omv_config_get "//services/pxe/sharedfolderref")
PXE_PATH="$(omv_get_sharedfolder_path "${PXE_SHARED_FOLDER_REF}")"
PXE_CONFIG="${PXE_PATH}pxelinux.cfg/default"

if [ ! -d "${PXE_PATH}pxelinux.cfg" ]; then
	mkdir "${PXE_PATH}pxelinux.cfg"
fi

if [ $(omv_config_get "//services/pxe/EnableWinPath") == "1" ]; then
cat <<EOF > /etc/tftp_remap.conf
rg \\ /
EOF
elif [ -f "/etc/tftp_remap.conf" ]; then
	rm /etc/tftp_remap.conf
fi

if [ !-f pxelinux/vesamenu.c32 ]; then 
	cp /usr/lib/syslinux/vesamenu.c32 "${PXE_PATH}pxelinux.cfg/"
fi

if [ !-f pxelinux/pxelinux.0 ]; then
	cp /usr/lib/syslinux/pxelinux.0 "${PXE_PATH}pxelinux.cfg/"
fi

cat <<EOF > $PXE_CONFIG
DEFAULT vesamenu.c32
PROMPT 0

MENU TITLE PXE Boot System

LABEL Lokale HDD
 LOCALBOOT 0

EOF
#Loop through entries and output them into the config file

index=$(omv_config_get_count "//services/pxe/entries/entry")
while [ ${index} -gt 0 ]; do
			enable="$(omv_config_get "//services/pxe/entries/entry[position()=${index}]/enable")"
			label="$(omv_config_get "//services/pxe/entries/entry[position()=${index}]/label")"
			menu="$(omv_config_get "//services/pxe/entries/entry[position()=${index}]/menu")"
			kernel="$(omv_config_get "//services/pxe/entries/entry[position()=${index}]/kernel")"
			append="$(omv_config_get "//services/pxe/entries/entry[position()=${index}]/append")"
		if [ "${enable}" != "0" ]; then
cat <<EOF >> $PXE_CONFIG
	LABEL ${label}
		KERNEL ${kernel}
		APPEND ${append}
EOF
		fi
		
		index=$(( ${index} - 1 ))
done
if [ "${entry}" != "" ]; then
	entry="${entry}" >> ${PXE_CONFIG}
fi


exit 0

